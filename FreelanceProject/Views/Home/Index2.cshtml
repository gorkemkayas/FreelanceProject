@using Azure.Core
@{
    Layout = null;

    // Model creation - Normally this should come from Controller
    var jobs = new List<dynamic>
    {
        new { Id = 1, Title = "Website Design", Category = "Web Design", Price = "$500", Bids = 12, DaysLeft = 5, Image = "https://via.placeholder.com/300x150/4776E6/80B0FF?text=Web+Design" },
        new { Id = 2, Title = "Mobile App Development", Category = "Software", Price = "$1200", Bids = 8, DaysLeft = 7, Image = "https://via.placeholder.com/300x150/8E54E9/D8B5FF?text=Mobile+App" },
        new { Id = 3, Title = "Logo Design", Category = "Graphic Design", Price = "$150", Bids = 20, DaysLeft = 3, Image = "https://via.placeholder.com/300x150/FF61D2/FFBDE6?text=Logo+Design" },
        new { Id = 4, Title = "SEO Article Writing", Category = "Content Writing", Price = "$50", Bids = 15, DaysLeft = 2, Image = "https://via.placeholder.com/300x150/00C9FF/92FE9D?text=Article+Writing" },
        new { Id = 5, Title = "E-commerce Website", Category = "Web Design", Price = "$800", Bids = 10, DaysLeft = 10, Image = "https://via.placeholder.com/300x150/4776E6/80B0FF?text=E-commerce" },
        new { Id = 6, Title = "Database Optimization", Category = "Software", Price = "$600", Bids = 5, DaysLeft = 4, Image = "https://via.placeholder.com/300x150/8E54E9/D8B5FF?text=Database" },
        new { Id = 7, Title = "Brochure Design", Category = "Graphic Design", Price = "$120", Bids = 18, DaysLeft = 6, Image = "https://via.placeholder.com/300x150/FF61D2/FFBDE6?text=Brochure" },
        new { Id = 8, Title = "Product Descriptions", Category = "Content Writing", Price = "$30", Bids = 25, DaysLeft = 1, Image = "https://via.placeholder.com/300x150/00C9FF/92FE9D?text=Product+Descriptions" },
        new { Id = 9, Title = "WordPress Setup", Category = "Web Design", Price = "$250", Bids = 14, DaysLeft = 3, Image = "https://via.placeholder.com/300x150/4776E6/80B0FF?text=WordPress" },
        new { Id = 10, Title = "Python Scripting", Category = "Software", Price = "$300", Bids = 7, DaysLeft = 5, Image = "https://via.placeholder.com/300x150/8E54E9/D8B5FF?text=Python" },
        new { Id = 11, Title = "Social Media Graphics", Category = "Graphic Design", Price = "$90", Bids = 22, DaysLeft = 4, Image = "https://via.placeholder.com/300x150/FF61D2/FFBDE6?text=Social+Media" },
        new { Id = 12, Title = "Blog Articles", Category = "Content Writing", Price = "$20", Bids = 30, DaysLeft = 2, Image = "https://via.placeholder.com/300x150/00C9FF/92FE9D?text=Blog" },
        new { Id = 13, Title = "Responsive Design", Category = "Web Design", Price = "$400", Bids = 9, DaysLeft = 7, Image = "https://via.placeholder.com/300x150/4776E6/80B0FF?text=Responsive" },
        new { Id = 14, Title = "API Integration", Category = "Software", Price = "$550", Bids = 6, DaysLeft = 5, Image = "https://via.placeholder.com/300x150/8E54E9/D8B5FF?text=API" },
        new { Id = 15, Title = "Business Card Design", Category = "Graphic Design", Price = "$80", Bids = 17, DaysLeft = 3, Image = "https://via.placeholder.com/300x150/FF61D2/FFBDE6?text=Business+Card" },
        new { Id = 16, Title = "Translation Service", Category = "Content Writing", Price = "$15", Bids = 28, DaysLeft = 1, Image = "https://via.placeholder.com/300x150/00C9FF/92FE9D?text=Translation" },
        new { Id = 17, Title = "PHP Development", Category = "Software", Price = "$450", Bids = 11, DaysLeft = 6, Image = "https://via.placeholder.com/300x150/8E54E9/D8B5FF?text=PHP" },
        new { Id = 18, Title = "UI/UX Design", Category = "Web Design", Price = "$700", Bids = 8, DaysLeft = 8, Image = "https://via.placeholder.com/300x150/4776E6/80B0FF?text=UI/UX" },
        new { Id = 19, Title = "Animation Design", Category = "Graphic Design", Price = "$350", Bids = 13, DaysLeft = 4, Image = "https://via.placeholder.com/300x150/FF61D2/FFBDE6?text=Animation" },
        new { Id = 20, Title = "Technical Documentation", Category = "Content Writing", Price = "$75", Bids = 9, DaysLeft = 5, Image = "https://via.placeholder.com/300x150/00C9FF/92FE9D?text=Documentation" }
    };

    var categories = jobs.Select(j => j.Category).Distinct().ToList();
    var selectedCategory = ViewBag.SelectedCategory as string;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Freelance Job Platform</title>
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #4776E6 0%, #8E54E9 100%);
            --secondary-gradient: linear-gradient(135deg, #4361ee 0, #3a0ca3 100%);
            --success-gradient: linear-gradient(135deg, #4361ee 0, #3a0ca3 100%);
            --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
            --card-gradient: linear-gradient(135deg, #ffffff 0%, #f9f9f9 100%);
        }

        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: #f5f7fa;
            color: #333;
            min-height: 100vh;
        }

        header {
            background: var(--primary-gradient);
            color: white;
            text-align: center;
            padding: 3rem 0;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

            header::before {
                content: '';
                position: absolute;
                top: -50px;
                right: -50px;
                width: 200px;
                height: 200px;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.1);
            }

            header::after {
                content: '';
                position: absolute;
                bottom: -80px;
                left: -80px;
                width: 300px;
                height: 300px;
                border-radius: 50%;
                background: rgba(255, 255, 255, 0.1);
            }

            header h1 {
                margin: 0;
                font-size: 2.8rem;
                position: relative;
                z-index: 1;
                text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }

            header p {
                margin: 0.8rem 0 0;
                font-size: 1.3rem;
                opacity: 0.9;
                position: relative;
                z-index: 1;
            }

        .search-container {
            text-align: center;
            margin-bottom: 2.5rem;
            position: relative;
            z-index: 2;
        }

            .search-container input {
                padding: 1rem 1.5rem;
                width: 50%;
                max-width: 600px;
                border: none;
                border-radius: 50px;
                font-size: 1.1rem;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                transition: all 0.3s ease;
            }

                .search-container input:focus {
                    outline: none;
                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
                    transform: translateY(-2px);
                }

            .search-container button {
                padding: 1rem 2rem;
                background: var(--secondary-gradient);
                color: white;
                border: none;
                border-radius: 50px;
                cursor: pointer;
                font-size: 1.1rem;
                margin-left: 1rem;
                box-shadow: 0 4px 15px rgba(142, 84, 233, 0.3);
                transition: all 0.3s ease;
            }

                .search-container button:hover {
                    transform: translateY(-2px);
                    box-shadow: 0 6px 20px rgba(142, 84, 233, 0.4);
                }

        .job-categories {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
            gap: 1rem;
            margin-bottom: 3rem;
            padding: 0 2rem;
        }

        .category-btn {
            padding: 0.8rem 1.8rem;
            background: var(--card-gradient);
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
            text-decoration: none;
            color: #555;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

            .category-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            }

            .category-btn.active {
                background: var(--primary-gradient);
                color: white;
                box-shadow: 0 4px 15px rgba(71, 118, 230, 0.3);
            }

        .jobs-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 2rem;
            padding: 0 2rem;
            max-width: 1400px;
            margin: 0 auto 4rem;
        }

        .job-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            cursor: pointer;
            position: relative;
        }

            .job-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 5px;
                background: var(--primary-gradient);
            }

            .job-card:hover {
                transform: translateY(-10px) scale(1.02);
                box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            }

        .job-image {
            width: 100%;
            height: 180px;
            object-fit: cover;
        }

        .job-info {
            padding: 1.5rem;
        }

        .job-title {
            margin: 0 0 1rem;
            font-size: 1.2rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .job-price {
            color: #27ae60;
            font-weight: bold;
            font-size: 1.3rem;
            margin-bottom: 1rem;
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .job-meta {
            display: flex;
            justify-content: space-between;
            color: #7f8c8d;
            font-size: 0.9rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }

        footer {
            text-align: center;
            padding: 2.5rem;
            background: var(--dark-gradient);
            color: white;
            margin-top: 3rem;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.6);
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 2.5rem;
            border-radius: 16px;
            width: 80%;
            max-width: 800px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
            position: relative;
            animation: modalFadeIn 0.4s ease-out;
        }

     

        .close {
            color: #aaa;
            position: absolute;
            top: 1.5rem;
            right: 2rem;
            font-size: 2rem;
            font-weight: bold;
            cursor: pointer;
            transition: color 0.2s;
        }

            .close:hover {
                color: #555;
            }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
        }

        .modal-body {
            display: flex;
            flex-direction: column;
            gap: 2rem;
        }

        .modal-image {
            width: 100%;
            max-height: 350px;
            object-fit: cover;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .modal-title {
            margin: 0;
            color: #2c3e50;
            font-size: 1.8rem;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .modal-price {
            font-size: 1.8rem;
            font-weight: bold;
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .modal-meta {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
            color: #7f8c8d;
            font-size: 1rem;
        }

            .modal-meta span {
                padding: 0.5rem 1rem;
                background: #f5f7fa;
                border-radius: 50px;
            }

        .modal-description, .modal-requirements {
            line-height: 1.8;
            color: #555;
        }

            .modal-description h3, .modal-requirements h3 {
                color: #2c3e50;
                border-bottom: 2px solid #f1f1f1;
                padding-bottom: 0.8rem;
                margin-bottom: 1.5rem;
                font-size: 1.4rem;
            }

            .modal-requirements ul {
                padding-left: 1.8rem;
            }

            .modal-requirements li {
                margin-bottom: 0.8rem;
                position: relative;
            }

                .modal-requirements li::before {
                    content: '•';
                    color: #4776E6;
                    font-weight: bold;
                    display: inline-block;
                    width: 1em;
                    margin-left: -1em;
                }

        .apply-btn {
            display: block;
            width: 100%;
            padding: 1.2rem;
            background: var(--secondary-gradient);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.2rem;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 2rem;
            box-shadow: 0 4px 15px rgba(255, 97, 210, 0.3);
        }

            .apply-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(255, 97, 210, 0.4);
            }

        /* Category-based card border colors */
        .job-card[data-category="Web Design"]::before {
            background: var(--primary-gradient);
        }

        .job-card[data-category="Software"]::before {
            background: linear-gradient(135deg, #8E54E9 0%, #4776E6 100%);
        }

        .job-card[data-category="Graphic Design"]::before {
            background: var(--secondary-gradient);
        }

        .job-card[data-category="Content Writing"]::before {
            background: var(--success-gradient);
        }

        /* Pagination Styles */
        .pagination {
            display: flex;
            justify-content: center;
            margin: 3rem 0;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .page-item {
            list-style: none;
        }

        .page-link {
            display: block;
            padding: 0.8rem 1.2rem;
            border-radius: 8px;
            background: #f5f7fa;
            color: #4776E6;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            border: 1px solid #e0e6ed;
        }

            .page-link:hover {
                background: #e0e6ed;
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            }

        .page-item.active .page-link {
            background: var(--primary-gradient);
            color: white;
            border-color: #4776E6;
            box-shadow: 0 4px 15px rgba(71, 118, 230, 0.3);
        }

        .page-item.disabled .page-link {
            color: #b8c2cc;
            pointer-events: none;
            background: #f8fafc;
        }

        .page-link-prev, .page-link-next {
            padding: 0.8rem 1.5rem;
        }

        /* Page size selector */
        .page-size-selector {
            margin-left: 1rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

            .page-size-selector select {
                padding: 0.5rem;
                border-radius: 4px;
                border: 1px solid #ddd;
                background: white;
            }

        
            .search-container {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 1rem;
            }
            
            .search-container input {
                width: 80%;
            }
            
            .search-container button {
                margin-left: 0;
            }
            
            .job-categories {
                gap: 0.8rem;
                padding: 0 1rem;
            }
            
            .category-btn {
                padding: 0.7rem 1.5rem;
            }

            .modal-content {
                width: 90%;
                margin: 10% auto;
                padding: 1.5rem;
            }
            
            .modal-title {
                font-size: 1.5rem;
            }
        }
  
    </style>
</head>
<body>
    <header>
        <h1>Freelance Job Platform</h1>
        <p>Find jobs that match your skills</p>
    </header>
    

    <div class="job-categories">
        <a href="?category=all" class="category-btn @(string.IsNullOrEmpty(selectedCategory) || selectedCategory == "all" ? "active" : "")">All</a>
        @foreach (var category in categories)
        {
            <a href="?category=@category" class="category-btn @(selectedCategory == category ? "active" : "")">@category</a>
        }
    </div>
    
    <div class="jobs-container" id="jobsContainer">
        @{
            var filteredJobs = jobs;
            if (!string.IsNullOrEmpty(selectedCategory) && selectedCategory != "all")
            {
                filteredJobs = jobs.Where(j => j.Category == selectedCategory).ToList();
            }

            foreach (var job in filteredJobs)
            {
                <div class="job-card" onclick="showJobDetails(@job.Id)" data-category="@job.Category">
                    <img src="@job.Image" alt="@job.Title" class="job-image">
                    <div class="job-info">
                        <h3 class="job-title">@job.Title</h3>
                        <div class="job-price">@job.Price</div>
                        <div class="job-meta">
                            <span>@job.Bids bids</span>
                            <span>@job.DaysLeft days left</span>
                        </div>
                    </div>
                </div>
            }
        }
    </div>

   
    
    <!-- Job Details Modal -->
    <div id="jobModal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="modal-header">
                <h2 id="modalTitle"></h2>
                <div id="modalPrice"></div>
            </div>
            <div class="modal-body">
                <img id="modalImage" class="modal-image">
                <div class="modal-meta">
                    <span id="modalCategory"></span>
                    <span id="modalBids"></span>
                    <span id="modalDays"></span>
                </div>
                <div class="modal-description">
                    <h3>Job Description</h3>
                    <p id="modalDescription"></p>
                </div>
                <div class="modal-requirements">
                    <h3>Requirements</h3>
                    <ul id="modalRequirements"></ul>
                </div>
                <button class="apply-btn">Place Bid</button>
            </div>
        </div>
    </div>
    
    <footer>
        <p>© @DateTime.Now.Year Freelance Job Platform. All rights reserved.</p>
    </footer>
    
    <script>
        // Modal operations
        const modal = document.getElementById("jobModal");
        const span = document.getElementsByClassName("close")[0];
        
        span.onclick = function() {
            modal.style.display = "none";
        }
        
        window.onclick = function(event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
        
        // Show job details
        function showJobDetails(jobId) {
            // Normally we should fetch details from server via AJAX
            // For now we'll use sample data
            const jobData = {
                1: {
                    title: "Website Design",
                    category: "Web Design",
                    price: "$500",
                    bids: 12,
                    daysLeft: 5,
                    image: "https://via.placeholder.com/800x400/4776E6/80B0FF?text=Web+Design+Details",
                    description: "Modern and responsive website design for a business. The site should consist of at least 5 pages and be mobile-friendly. The design should use the client's brand colors. The project should be completed within 2 weeks.",
                    requirements: [
                        "HTML/CSS knowledge",
                        "Basic JavaScript",
                        "Responsive design experience",
                        "Understanding of UI/UX principles",
                        "Ability to use Photoshop or Figma",
                        "Git version control knowledge"
                    ]
                },
                2: {
                    title: "Mobile App Development",
                    category: "Software",
                    price: "$1200",
                    bids: 8,
                    daysLeft: 7,
                    image: "https://via.placeholder.com/800x400/8E54E9/D8B5FF?text=Mobile+App+Details",
                    description: "E-commerce app development for iOS and Android platforms. The app should include product listing, shopping cart, payment integration and user management features. Firebase will be used as backend.",
                    requirements: [
                        "React Native or Flutter experience",
                        "Firebase integration knowledge",
                        "Redux or similar state management tools",
                        "API integration experience",
                        "Git version control system"
                    ]
                },
                // Other jobs can be added similarly
                // ...
            };
            
            // If jobId not found, show a default job
            const job = jobData[jobId] || {
                title: "Sample Job",
                category: "Category",
                price: "$100",
                bids: 10,
                daysLeft: 3,
                image: "https://via.placeholder.com/800x400/00C9FF/92FE9D?text=Job+Details",
                description: "Detailed description of this job will appear here. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam auctor, nisl eget ultricies tincidunt, nisl nisl aliquam nisl, eget ultricies nisl nisl eget nisl. Proin eget tortor risus. Cras ultricies ligula sed magna dictum porta.",
                requirements: [
                    "Basic knowledge",
                    "Experience",
                    "Skills",
                    "Teamwork",
                    "Communication skills"
                ]
            };
            
            // Fill modal content
            document.getElementById("modalTitle").textContent = job.title;
            document.getElementById("modalImage").src = job.image;
            document.getElementById("modalImage").alt = job.title;
            document.getElementById("modalCategory").textContent = job.category;
            document.getElementById("modalPrice").textContent = job.price;
            document.getElementById("modalBids").textContent = `${job.bids} bids`;
            document.getElementById("modalDays").textContent = `${job.daysLeft} days left`;
            document.getElementById("modalDescription").textContent = job.description;
            
            const requirementsList = document.getElementById("modalRequirements");
            requirementsList.innerHTML = "";
            job.requirements.forEach(req => {
                const li = document.createElement("li");
                li.textContent = req;
                requirementsList.appendChild(li);
            });
            
            // Show modal
            modal.style.display = "block";
        }
        
        // Job search function
        function searchJobs() {
            const searchText = document.getElementById("searchInput").value.toLowerCase();
            const jobCards = document.querySelectorAll(".job-card");
            
            jobCards.forEach(card => {
                const title = card.querySelector(".job-title").textContent.toLowerCase();
                if (title.includes(searchText)) {
                    card.style.display = "block";
                } else {
                    card.style.display = "none";
                }
            });
        }
        
        // Search on Enter key
        document.getElementById("searchInput").addEventListener("keyup", function(event) {
            if (event.key === "Enter") {
                searchJobs();
            }
        });

        // Update query string parameters
        function updateQueryStringParameter(uri, key, value) {
            const re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
            const separator = uri.indexOf('?') !== -1 ? "&" : "?";
            if (uri.match(re)) {
                return uri.replace(re, '$1' + key + "=" + value + '$2');
            }
            return uri + separator + key + "=" + value;
        }

        // Change page size function
        function changePageSize(size) {
            const currentUrl = window.location.href;
            const newUrl = updateQueryStringParameter(currentUrl, 'pageSize', size);
            window.location.href = newUrl;
        }
    </script>
</body>
</html>